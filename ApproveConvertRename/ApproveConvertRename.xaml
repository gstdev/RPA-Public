<Activity mc:Ignorable="sap sap2010 sads" x:Class="DirectoryLoop" mva:VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="DirectoryLoop_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:p="http://schemas.uipath.com/workflow/activities/word"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="Approve, Convert, And Rename" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="s:String[]" Name="files" />
      <Variable x:TypeArguments="x:Boolean" Name="pathExists" />
      <Variable x:TypeArguments="x:String" Default="C:\Users\GST\Documents\UiPath\RPA-Public\Sample Documents" Name="initialPath" />
      <Variable x:TypeArguments="x:String" Name="fileName" />
      <Variable x:TypeArguments="x:String" Name="sourceFile" />
      <Variable x:TypeArguments="x:String" Name="fileNameWithoutExt" />
      <Variable x:TypeArguments="x:String" Default="*.doc*" Name="searchPattern" />
      <Variable x:TypeArguments="x:String" Default="C:\Users\GST\Documents\Sample Documents\Approved" Name="approvedWordDirectory" />
      <Variable x:TypeArguments="x:String" Default="C:\Users\GST\Documents\Sample Documents\Converted" Name="convertedPDFDirectory" />
      <Variable x:TypeArguments="x:TimeSpan" Default="00:00:03" Name="loadDelay" />
      <Variable x:TypeArguments="x:TimeSpan" Default="00:00:05" Name="convertDelay" />
      <Variable x:TypeArguments="x:TimeSpan" Default="00:00:02" Name="moveDelay" />
    </Flowchart.Variables>
    <Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_4">
        <ui:PathExists DisplayName="Root Directory Exists?" Exists="[pathExists]" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[initialPath]" PathType="Folder" />
        <FlowStep.Next>
          <FlowDecision x:Name="__ReferenceID1" Condition="[pathExists]" DisplayName="Flow Decision" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
            <FlowDecision.True>
              <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_2">
                <Assign DisplayName="Root Directory Exists" sap2010:WorkflowViewState.IdRef="Assign_1">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:String[]">[files]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(initialPath, searchPattern)]</InArgument>
                  </Assign.Value>
                </Assign>
                <FlowStep.Next>
                  <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_1">
                    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="Root Directory Loop" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[files]">
                      <ui:ForEach.Body>
                        <ActivityAction x:TypeArguments="x:String">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:String" Name="file" />
                          </ActivityAction.Argument>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
                            <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_1">
                              <p:WordApplicationScope DisplayName="Word Application Scope" FilePath="[file]" sap2010:WorkflowViewState.IdRef="WordApplicationScope_1">
                                <p:WordApplicationScope.Body>
                                  <ActivityAction x:TypeArguments="ui:WordDocument">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ui:WordDocument" Name="WordDocumentScope" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Sequence (Approve All, Save, Close)" sap2010:WorkflowViewState.IdRef="Sequence_3">
                                      <Delay Duration="[convertDelay]" sap2010:WorkflowViewState.IdRef="Delay_3" />
                                      <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Into Word Application" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                        <ui:Click.CursorPosition>
                                          <ui:CursorPosition Position="Center">
                                            <ui:CursorPosition.OffsetX>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:CursorPosition.OffsetX>
                                            <ui:CursorPosition.OffsetY>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:CursorPosition.OffsetY>
                                          </ui:CursorPosition>
                                        </ui:Click.CursorPosition>
                                        <ui:Click.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="9eac47971d365e85206f66e4c305d355" Selector="&lt;wnd app='winword.exe' cls='OpusApp' /&gt;" WaitForReady="INTERACTIVE" />
                                        </ui:Click.Target>
                                      </ui:Click>
                                      <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey (Review Ribbon)" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="r" KeyModifiers="Alt" SendWindowMessages="False" SpecialKey="False">
                                        <ui:SendHotkey.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                        </ui:SendHotkey.Target>
                                      </ui:SendHotkey>
                                      <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type Into (Approve All)" EmptyField="False" sap2010:WorkflowViewState.IdRef="TypeInto_2" SendWindowMessages="False" SimulateType="False" Text="a2l">
                                        <ui:TypeInto.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                        </ui:TypeInto.Target>
                                      </ui:TypeInto>
                                      <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey (Review Ribbon)" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_9" Key="r" KeyModifiers="Alt" SendWindowMessages="False" SpecialKey="False">
                                        <ui:SendHotkey.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                        </ui:SendHotkey.Target>
                                      </ui:SendHotkey>
                                      <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type Into (Markup Drop Down)" EmptyField="False" sap2010:WorkflowViewState.IdRef="TypeInto_3" SendWindowMessages="False" SimulateType="False" Text="td[k(down)][k(down)][k(enter)]">
                                        <ui:TypeInto.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                        </ui:TypeInto.Target>
                                      </ui:TypeInto>
                                      <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey (Review Ribbon)" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_10" Key="r" KeyModifiers="Alt" SendWindowMessages="False" SpecialKey="False">
                                        <ui:SendHotkey.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                        </ui:SendHotkey.Target>
                                      </ui:SendHotkey>
                                      <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type Into (Markup Drop Down)" EmptyField="False" sap2010:WorkflowViewState.IdRef="TypeInto_4" SendWindowMessages="False" SimulateType="False" Text="y">
                                        <ui:TypeInto.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                        </ui:TypeInto.Target>
                                      </ui:TypeInto>
                                      <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey (Enter)" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_7" Key="enter" KeyModifiers="None" SendWindowMessages="False" SpecialKey="True">
                                        <ui:SendHotkey.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="9f360fa107dd1e07967117b6c9258fe4" Selector="&lt;wnd app='winword.exe' cls='#32770' title='Publish as PDF or XPS' /&gt;" WaitForReady="INTERACTIVE" />
                                        </ui:SendHotkey.Target>
                                      </ui:SendHotkey>
                                      <Delay Duration="[loadDelay]" sap2010:WorkflowViewState.IdRef="Delay_7" />
                                      <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey (Save Document)" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_8" Key="s" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                                        <ui:SendHotkey.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                        </ui:SendHotkey.Target>
                                      </ui:SendHotkey>
                                      <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey (Close Word)" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_4" Key="f4" KeyModifiers="Alt" SendWindowMessages="False" SpecialKey="True">
                                        <ui:SendHotkey.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                        </ui:SendHotkey.Target>
                                      </ui:SendHotkey>
                                      <Assign DisplayName="Assign (Set Filename)" sap2010:WorkflowViewState.IdRef="Assign_3">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[fileName]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[Path.GetFileName(file)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[fileNameWithoutExt]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[Path.GetFileNameWithoutExtension(file)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </ActivityAction>
                                </p:WordApplicationScope.Body>
                              </p:WordApplicationScope>
                            </Sequence>
                            <Assign DisplayName="Assign (Set Source File)" sap2010:WorkflowViewState.IdRef="Assign_6">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[sourceFile]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[initialPath + "\" + fileName]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Delay Duration="[moveDelay]" sap2010:WorkflowViewState.IdRef="Delay_8" />
                            <ui:MoveFile ContinueOnError="{x:Null}" Destination="[approvedWordDirectory + &quot;\&quot;]" DisplayName="Move Approved Word Doc" sap2010:WorkflowViewState.IdRef="MoveFile_1" Overwrite="True" Path="[sourceFile]" />
                            <ui:MoveFile ContinueOnError="{x:Null}" Destination="[convertedPDFDirectory]" DisplayName="Move Converted PDF" sap2010:WorkflowViewState.IdRef="MoveFile_3" Overwrite="True" Path="[initialPath + &quot;\&quot; + fileNameWithoutExt + &quot;.pdf&quot;]" />
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEach.Body>
                    </ui:ForEach>
                    <FlowStep.Next>
                      <FlowStep x:Name="__ReferenceID5" sap2010:WorkflowViewState.IdRef="FlowStep_5">
                        <Sequence DisplayName="Rename Files" sap2010:WorkflowViewState.IdRef="Sequence_8">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="fileRename" />
                            <Variable x:TypeArguments="x:String" Name="matchingCell" />
                            <Variable x:TypeArguments="x:String" Name="renameCell" />
                            <Variable x:TypeArguments="x:String" Name="finalFile" />
                            <Variable x:TypeArguments="x:String" Default="C:\Users\GST\Documents\UiPath\RPA-Public\Sample Documents\FileMapping.xlsx" Name="excelFile" />
                            <Variable x:TypeArguments="x:String" Default="C2:C51" Name="rawFilenameColumnRange" />
                            <Variable x:TypeArguments="x:String" Default="C" Name="filenameColumn" />
                            <Variable x:TypeArguments="x:String" Default="B" Name="uuidColumn" />
                            <Variable x:TypeArguments="x:String" Default="D" Name="actionColumn" />
                            <Variable x:TypeArguments="x:String" Default="DatabaseEntries" Name="excelSheetName" />
                            <Variable x:TypeArguments="x:Boolean" Name="cellMatchNotFound" />
                          </Sequence.Variables>
                          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Open File Mapping Excel Spreadsheet" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" WorkbookPath="[excelFile]">
                            <ui:ExcelApplicationScope.Body>
                              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Check for Cell Match" sap2010:WorkflowViewState.IdRef="Sequence_7">
                                  <ui:PathExists Exists="{x:Null}" DisplayName="Document Directory Path Check" sap2010:WorkflowViewState.IdRef="PathExists_2" Path="[convertedPDFDirectory]" PathType="Folder" />
                                  <Assign DisplayName="Get Files" sap2010:WorkflowViewState.IdRef="Assign_8">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="s:String[]">[files]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(convertedPDFDirectory)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="Loop Through Files" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[files]">
                                    <ui:ForEach.Body>
                                      <ActivityAction x:TypeArguments="x:Object">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Try to Find Cell Match" sap2010:WorkflowViewState.IdRef="Sequence_6">
                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_9">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[filename]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[Path.GetFileNameWithoutExtension(file.ToString())]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:ExcelLookUpRange DisplayName="LookUp Range" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_1" Range="[rawFilenameColumnRange]" Result="[matchingCell]" SheetName="[excelSheetName]" Value="[filename]" />
                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[cellMatchNotFound]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">[String.IsNullOrEmpty(matchingCell)]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <If Condition="[cellMatchNotFound]" sap2010:WorkflowViewState.IdRef="If_1">
                                            <If.Then>
                                              <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[&quot;No Match: &quot; + filename]" />
                                            </If.Then>
                                            <If.Else>
                                              <Sequence DisplayName="Cell Match" sap2010:WorkflowViewState.IdRef="Sequence_5">
                                                <Sequence.Variables>
                                                  <Variable x:TypeArguments="x:String" Default="C:\Users\GST\Documents\Sample Documents\Converted\Renamed" Name="renamedFileDirectory" />
                                                </Sequence.Variables>
                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[renameCell]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[matchingCell.Replace(filenameColumn, uuidColumn)]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <ui:ExcelReadCell Cell="[renameCell]" DisplayName="Read Cell" sap2010:WorkflowViewState.IdRef="ExcelReadCell_1" SheetName="[excelSheetName]">
                                                  <ui:ExcelReadCell.Result>
                                                    <OutArgument x:TypeArguments="x:String">[fileRename]</OutArgument>
                                                  </ui:ExcelReadCell.Result>
                                                </ui:ExcelReadCell>
                                                <Assign DisplayName="Set Final Destination File" sap2010:WorkflowViewState.IdRef="Assign_12">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[finalFile]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[renamedFileDirectory + fileRename + ".pdf"]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <ui:MoveFile ContinueOnError="{x:Null}" Destination="[finalFile]" DisplayName="Move and Rename File" sap2010:WorkflowViewState.IdRef="MoveFile_4" Overwrite="True" Path="[file.ToString()]" />
                                                <ui:ExcelWriteCell Cell="[matchingCell.Replace(filenameColumn, actionColumn)]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="[excelSheetName]" Text="Renamed" />
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:ForEach.Body>
                                  </ui:ForEach>
                                </Sequence>
                              </ActivityAction>
                            </ui:ExcelApplicationScope.Body>
                          </ui:ExcelApplicationScope>
                        </Sequence>
                      </FlowStep>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowStep.Next>
              </FlowStep>
            </FlowDecision.True>
            <FlowDecision.False>
              <FlowStep x:Name="__ReferenceID4" sap2010:WorkflowViewState.IdRef="FlowStep_3">
                <ui:SelectFolder DisplayName="User Selects Directory" sap2010:WorkflowViewState.IdRef="SelectFolder_1" SelectedFolder="[initialPath]" />
                <FlowStep.Next>
                  <x:Reference>__ReferenceID0</x:Reference>
                </FlowStep.Next>
              </FlowStep>
            </FlowDecision.False>
          </FlowDecision>
        </FlowStep.Next>
      </FlowStep>
    </Flowchart.StartNode>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <sads:DebugSymbol.Symbol>d1dDOlxVc2Vyc1xHU1RcRG9jdW1lbnRzXFVpUGF0aFxSUEEtUHVibGljXEFwcHJvdmVDb252ZXJ0UmVuYW1lXEFwcHJvdmVDb252ZXJ0UmVuYW1lLnhhbWx2QgPQAg8CAQFGNEZvAgEISjRKPAIBB0s0S2YCAQZMNExnAgEFTTZNQAIBBE42TkACAQNPNk9AAgECUwlTqwEDAaMBVTtVSQMBoQG/AhG/ApkBAwGeAVgRXxoDAZoBYhXSASICAVrVARm2AiQCAQlTRFNSAwGmAVOHAVOWAQMBpAG/AocBvwKWAQMBnwFdPl1uAwGdAVo/WkYDAZsBYqsBYrQBAwGYAWgbzwEmAgFb2wFK2wGWAQIBD9wBStwBUgIBDt0BSt0BTQIBDd4BSt4BTQIBDN8BSt8BTQIBC+ABSuABWwIBCuMBG7UCNgIBEGkdwwEoAgFwxAEdywEmAgFqzAEdzAFnAgFnzQEdzQH0AQIBYs4BHc4BmQICAVzjAcIB4wHPAQIBWOkBIbICLAIBEWofwgE4AgFxyQFIyQFmAgFtxgFJxgFVAgFrzAEtzAE6AgFozQFRzQF6AgFlzQHjAc0B8QECAWPOAVHOAWoCAWDOAc8BzgGWAgIBXeoBI+oB0gECAVXrASPyASwCAVHzASOxAjACARJqZWptAwGWAXAlvwEwAgFy6gGkAeoBvQECAVbwAVDwAXsCAVTtAVHtAVgCAVLzAbgB8wHBAQIBT/kBKa4CNAIBE3EncXQDAZMBcieAATIDAZEBgQEnhQE3AwGPAYYBJ4oBNQMBjQGLASePATcDAYsBkAEnlAE1AwGJAZUBJ5kBNwMBhwGaASeeATUDAYUBnwEnowE3AwGCAaQBJ6QBcQIBf6UBJ6kBNwIBfaoBJ64BNwIBe68BJ7YBMAIBd7cBJ74BMAIBc/oBK4ECNAIBS4ICK4IC+wECAUKDAiuKAjQCAT2LAiutAjACARRxN3FHAwGUAX66AX7pAQMBkgGBAZYCgQGZAgMBkAGGAb8ChgHEAgMBjgGLAZYCiwGZAgMBjAGQAcQCkAHkAgMBigGVAZcClQGaAgMBiAGaAcQCmgHHAgMBhgGhAboBoQGGAgMBhAGfAY4CnwGVAgMBgwGkATekAUQDAYABpQGWAqUBmQICAX6qAZMCqgGXAgIBfLQBUrQBagIBerEBU7EBXQIBeLwBUrwBegIBdrkBU7kBZwIBdP8BVv8BiQECAU78AVf8AWECAUyCAuwBggL4AQIBSYICuAGCAsgBAgFHggKWAYICsAECAUWCAtMBggLlAQIBQ4gCV4gCewIBQIUCWIUCawIBPosCOYsCTgIBFY0CL40CrgECATqQAi+rAjoCAReNAoYBjQKrAQIBO5ICYJICmwECARiUAjGbAjoCATOcAjGgAkQCASyhAjGoAjoCASapAjGpAu8BAgEhqgIxqgL6AQIBGZkCXJkCjgECATaWAl2WAmkCATScAkicAlYCATGeAl2eAmkCAS+cAqsBnAK9AQIBLaYCXKYCiAECASmjAl2jAmgCASepAmWpAnICASSpAtkBqQLsAQIBIqoCSaoCfwIBHaoC7gGqAvcBAgEcqgLWAaoC6AECARo=</sads:DebugSymbol.Symbol>
  </Flowchart>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="PathExists_1" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Delay_3" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Click_1" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="SendHotkey_2" sap:VirtualizedContainerService.HintSize="314,116" />
      <sap2010:ViewStateData Id="TypeInto_2" sap:VirtualizedContainerService.HintSize="314,96" />
      <sap2010:ViewStateData Id="SendHotkey_9" sap:VirtualizedContainerService.HintSize="314,116" />
      <sap2010:ViewStateData Id="TypeInto_3" sap:VirtualizedContainerService.HintSize="314,96" />
      <sap2010:ViewStateData Id="SendHotkey_10" sap:VirtualizedContainerService.HintSize="314,116" />
      <sap2010:ViewStateData Id="TypeInto_4" sap:VirtualizedContainerService.HintSize="314,96" />
      <sap2010:ViewStateData Id="SendHotkey_7" sap:VirtualizedContainerService.HintSize="314,154" />
      <sap2010:ViewStateData Id="Delay_7" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="SendHotkey_8" sap:VirtualizedContainerService.HintSize="314,116" />
      <sap2010:ViewStateData Id="SendHotkey_4" sap:VirtualizedContainerService.HintSize="314,116" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="336,1936">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordApplicationScope_1" sap:VirtualizedContainerService.HintSize="414,2045" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="436,2169">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="436,60" />
      <sap2010:ViewStateData Id="Delay_8" sap:VirtualizedContainerService.HintSize="436,22" />
      <sap2010:ViewStateData Id="MoveFile_1" sap:VirtualizedContainerService.HintSize="436,22" />
      <sap2010:ViewStateData Id="MoveFile_3" sap:VirtualizedContainerService.HintSize="436,22" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="458,2579">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="200,51" />
      <sap2010:ViewStateData Id="PathExists_2" sap:VirtualizedContainerService.HintSize="609,89" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="609,60" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="571,60" />
      <sap2010:ViewStateData Id="ExcelLookUpRange_1" sap:VirtualizedContainerService.HintSize="571,87" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="571,60" />
      <sap2010:ViewStateData Id="WriteLine_1" sap:VirtualizedContainerService.HintSize="210,61" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ExcelReadCell_1" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="MoveFile_4" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="ExcelWriteCell_1" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="336,572">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="571,720" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="593,1171">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_2" sap:VirtualizedContainerService.HintSize="609,1305" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="631,1656">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_1" sap:VirtualizedContainerService.HintSize="645,1765" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="667,1889">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_5">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">30,504.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">30,424</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">130,475 130,504.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">9,320</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">130,380 130,424</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SelectFolder_1" sap:VirtualizedContainerService.HintSize="200,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">350,319</av:Point>
            <av:Size x:Key="ShapeSize">200,22</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">450,341 450,350 251,350</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_1" sap:VirtualizedContainerService.HintSize="79,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">240.5,206.5</av:Point>
            <av:Size x:Key="ShapeSize">79,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">240.5,250 130,250 130,320</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">319.5,250 450,250 450,319</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,104.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,155.5 300,185.5 299.75,185.5 299.75,206.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="645,792">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,104.5</av:PointCollection>
            <x:Double x:Key="Width">631</x:Double>
            <x:Double x:Key="Height">755.5</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DirectoryLoop_1" sap:VirtualizedContainerService.HintSize="685,912" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>